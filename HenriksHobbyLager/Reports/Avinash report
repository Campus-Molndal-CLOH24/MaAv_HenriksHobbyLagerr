# Individuell Rapport

Svara på frågorna nedan och lämna in det som en del av din inlämning.
---
## Hur fungerade gruppens arbete?
  It went good. We had few meetings and discussed what we have done far and continue to work towards finishing project. 
---
## Beskriv gruppens databasimplementation
  Our project supports two databases, SQLite and MongoDB, using Entity Framework Core (EF Core) for data access.
---
## Vilka SOLID-principer implementerade ni och hur?
| **Principle**                   | **Example in Project**                                                                                                                                          |
|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Single Responsibility**       | Separate classes for product representation, database access (repositories), and application logic.                                                            |
| **Open/Closed**                 | The repository pattern allows adding new database implementations without modifying existing code.                                                             |
| **Liskov Substitution**         | `SqliteRepository` and `MongoDbRepository` can be used interchangeably since both adhere to `IRepository<T>`.                                                  |
| **Interface Segregation**       | Focused interfaces like `IRepository<T>` and `IProductFacade` prevent unnecessary dependencies on unrelated functionality.                                      |
| **Dependency Inversion**        | The application depends on abstractions (`IRepository<T>`) rather than concrete database implementations (`SqliteRepository`, `MongoDbRepository`).            |

---
## Vilka patterns använde ni och varför?
  We have used repository pattern to handle different database connections.The repository pattern provides a clean abstraction layer between the business logic and the database logic.  Application logic (like adding, updating, and searching products) doesn't need to know whether the database is SQLite or MongoDB. It simply interacts with the repository interface (IRepository<T>).
---
## Vilka tekniska utmaningar stötte ni på och hur löste ni dem?
  
---
## Hur planerade du ditt arbete?
---
## Vilka dela gjorde du?
---
## Vilka utmaningar stötte du på och hur löste du dem?
---
## Vad skulle du göra annorlunda nästa gång?
  Next Project 
